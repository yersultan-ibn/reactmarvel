{"version":3,"sources":["components/appHeader/AppHeader.js","resources/img/thor.jpeg","services/MarvelService.js","hook/http.hook.js","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/charList/CharList.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","resources/img/vision.png","components/pages/MainPage.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/comicsList/ComicsListPage.js","components/pages/ComicsPage.js","components/pages/SingleComicPage.js","components/app/App.js","index.js"],"names":["AppHeader","className","to","activeStyle","color","exact","useMarvelService","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","message","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacterByName","name","getCharacter","id","getAllComics","_transformComics","getComic","char","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","title","pageCount","language","textObjects","price","prices","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","objectFit","src","img","alt","Skeleton","View","href","length","item","i","CharInfo","props","charList","setCharList","useEffect","updateChar","charId","then","onCharLoaded","skeleton","spinner","errorMessage","content","CharList","newItemLoading","setnewItemLoading","setOffset","charEnded","setCharEnded","onRequest","initial","onCharListLoaded","newCharList","ended","itemRefs","useRef","focusOnItem","current","forEach","classList","remove","add","focus","arr","imgStyle","CSSTransition","timeout","classNames","tabIndex","ref","el","onClick","onCharSelected","onKeyPress","e","key","TransitionGroup","component","renderItems","disabled","RandomChar","setChar","Math","floor","random","mjolnir","MainPage","newItemId","setNewItemId","decoration","AppBanner","avengers","avengersLogo","ComicsList","comicsList","setComicsList","comicsEnded","setComicsEnded","onComicsListLoaded","newComicsList","ComicsPage","comic","SingleComic","comicId","useParams","setComic","updateComic","onComicLoaded","App","SingleComicPage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.089b41a7.chunk.js","sourcesContent":["import { Link, NavLink } from \"react-router-dom\";\nimport \"./appHeader.scss\";\n\nconst AppHeader = () => {\n  return (\n    <header className=\"app__header\">\n      <h1 className=\"app__title\">\n        <Link to=\"/\">\n          <span>Marvel</span> information portal\n        </Link>\n      </h1>\n      <nav className=\"app__menu\">\n        <ul>\n          <li>\n            <NavLink to=\"/\" activeStyle={{color: '#9F0013'}} exact>  Characters</NavLink>\n          </li>\n          /\n          <li>\n            <NavLink to=\"/comics\" activeStyle={{color: '#9F0013'}} >Comics</NavLink>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default AppHeader;\n","export default __webpack_public_path__ + \"static/media/thor.533e3a5e.jpeg\";","import { useHttp } from \"../hook/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n  const { loading, request, error, clearError } = useHttp();\r\n\r\n  const _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\r\n  // ЗДЕСЬ БУДЕТ ВАШ КЛЮЧ, ЭТОТ КЛЮЧ МОЖЕТ НЕ РАБОТАТЬ\r\n  const _apiKey = \"apikey=c5d6fc8b83116d92ed468ce36bac6c62\";\r\n  const _baseOffset = 210;\r\n\r\n  const getAllCharacters = async (offset = _baseOffset) => {\r\n    const res = await request(\r\n      `${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\r\n    );\r\n    return res.data.results.map(_transformCharacter);\r\n  };\r\n\r\n  // Вариант модификации готового метода для поиска по имени.\r\n  // Вызывать его можно вот так: getAllCharacters(null, name)\r\n\r\n  // const getAllCharacters = async (offset = _baseOffset, name = '') => {\r\n  //     const res = await request(`${_apiBase}characters?limit=9&offset=${offset}${name ? `&name=${name}` : '' }&${_apiKey}`);\r\n  //     return res.data.results.map(_transformCharacter);\r\n  // }\r\n\r\n  // Или можно создать отдельный метод для поиска по имени\r\n\r\n  const getCharacterByName = async (name) => {\r\n    const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n    return res.data.results.map(_transformCharacter);\r\n  };\r\n\r\n  const getCharacter = async (id) => {\r\n    const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n    return _transformCharacter(res.data.results[0]);\r\n  };\r\n\r\n  const getAllComics = async (offset = 0) => {\r\n    const res = await request(\r\n      `${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\r\n    );\r\n    return res.data.results.map(_transformComics);\r\n  };\r\n\r\n  const getComic = async (id) => {\r\n    const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n    return _transformComics(res.data.results[0]);\r\n  };\r\n\r\n  const _transformCharacter = (char) => {\r\n    return {\r\n      id: char.id,\r\n      name: char.name,\r\n      description: char.description\r\n        ? `${char.description.slice(0, 210)}...`\r\n        : \"There is no description for this character\",\r\n      thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\r\n      homepage: char.urls[0].url,\r\n      wiki: char.urls[1].url,\r\n      comics: char.comics.items,\r\n    };\r\n  };\r\n\r\n  const _transformComics = (comics) => {\r\n    return {\r\n      id: comics.id,\r\n      title: comics.title,\r\n      description: comics.description || \"There is no description\",\r\n      pageCount: comics.pageCount\r\n        ? `${comics.pageCount} p.`\r\n        : \"No information about the number of pages\",\r\n      thumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\r\n      language: comics.textObjects[0]?.language || \"en-us\",\r\n      price: comics.prices[0].price\r\n        ? `${comics.prices[0].price}$`\r\n        : \"not available\",\r\n    };\r\n  };\r\n\r\n  return {\r\n    loading,\r\n    error,\r\n    clearError,\r\n    getAllCharacters,\r\n    getCharacterByName,\r\n    getCharacter,\r\n    getAllComics,\r\n    getComic,\r\n  };\r\n};\r\n\r\nexport default useMarvelService;\r\n","import { useCallback, useState } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const request = useCallback(\r\n    async (\r\n      url,\r\n      method = \"GET\",\r\n      body = null,\r\n      headers = { \"Content-Type\": \"application/json\" }\r\n    ) => {\r\n      setLoading(true);\r\n      try {\r\n        const response = await fetch(url, { method, body, headers });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`Could not fetch url: ${url},  status ${url.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n        setLoading(false);\r\n        return data;\r\n      } catch (e) {\r\n        setLoading(false);\r\n        setError(e.message);\r\n        throw e;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = useCallback(() => setError(null), []);\r\n\r\n  return { loading, error, request, clearError };\r\n};\r\n","const Spinner = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\n            <g transform=\"translate(80,50)\">\n            <g transform=\"rotate(0)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\n            <g transform=\"rotate(45)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(50,80)\">\n            <g transform=\"rotate(90)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\n            <g transform=\"rotate(135)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(20,50.00000000000001)\">\n            <g transform=\"rotate(180)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\n            <g transform=\"rotate(225)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(49.99999999999999,20)\">\n            <g transform=\"rotate(270)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\n            <g transform=\"rotate(315)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\n            </circle>\n            </g>\n            </g>\n        </svg>\n    )\n}\n\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\n\nconst ErrorMessage = () => {\n    return (\n        <img style={{ display: 'block', width: \"250px\", height: \"250px\",objectFit: 'contain', margin: \"0 auto\"}}  src={img} alt=\"Error\"/>\n    )\n}\n\nexport default ErrorMessage;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import \"./charInfo.scss\";\nimport thor from \"../../resources/img/thor.jpeg\";\nimport { useEffect, useState } from \"react\";\nimport MarvelService from \"../../services/MarvelService\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport Skeleton from \"../skeleton/Skeleton\";\nimport useMarvelService from \"../../services/MarvelService\";\nconst CharInfo = (props) => {\n  const [charList, setCharList] = useState(null);\n  // const [loading, setLoading] = useState(false);\n  // const [error, setError] = useState(false);\n\n  const { loading, error, getCharacter } = useMarvelService();\n\n  useEffect(() => {\n    updateChar();\n  }, [props.charId]);\n\n  const updateChar = () => {\n    const { charId } = props;\n    if (!charId) {\n      return;\n    }\n\n    getCharacter(charId).then(onCharLoaded);\n  };\n\n  const onCharLoaded = (char) => {\n    setCharList(char);\n  };\n\n  const skeleton = charList || loading || error ? null : <Skeleton />;\n  const spinner = loading ? <Spinner /> : null;\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const content = !(loading || error || !charList) ? (\n    <View char={charList} />\n  ) : null;\n\n  return (\n    <div className=\"char__info\">\n      {skeleton}\n      {spinner}\n      {errorMessage}\n      {content}\n    </div>\n  );\n};\n\nconst View = ({ char }) => {\n  const { name, description, thumbnail, homepage, wiki, comics } = char;\n  return (\n    <>\n      <div className=\"char__basics\">\n        <img src={thumbnail} alt=\"abyss\" />\n        <div>\n          <div className=\"char__info-name\">{name}</div>\n          <div className=\"char__btns\">\n            <a href={homepage} className=\"button button__main\">\n              <div className=\"inner\">homepage</div>\n            </a>\n            <a href={wiki} className=\"button button__secondary\">\n              <div className=\"inner\">Wiki</div>\n            </a>\n          </div>\n        </div>\n      </div>\n      <div className=\"char__descr\">{description}</div>\n      <div className=\"char__comics\">Comics:</div>\n      <ul className=\"char__comics-list\">\n        {comics.length > 0 ? null : \"There is no comics with this character\"}\n        {comics.map((item, i) => {\n          // eslint-disable-next-line\n          if (i > 9) return;\n          return (\n            <li key={i} className=\"char__comics-item\">\n              {item.name}\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nexport default CharInfo;\n","import { useState, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport MarvelService from \"../../services/MarvelService\";\n\n// import useMarvelService from \"../../services/MarvelService\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\n\nimport \"./charList.scss\";\nimport useMarvelService from \"../../services/MarvelService\";\n\nconst CharList = (props) => {\n  const [charList, setCharList] = useState([]);\n  const [newItemLoading, setnewItemLoading] = useState(false);\n  const [offset, setOffset] = useState(210);\n  const [charEnded, setCharEnded] = useState(false);\n  // const [loading, setLoading] = useState(true);\n  // const [error, setError] = useState(false);\n\n  const { loading, error, getAllCharacters } = useMarvelService();\n  useEffect(() => {\n    onRequest(offset, true);\n  }, []);\n\n  const onRequest = (offset, initial) => {\n    initial ? setnewItemLoading(false) : setnewItemLoading(true);\n    getAllCharacters(offset).then(onCharListLoaded);\n  };\n\n  const onCharListLoaded = async (newCharList) => {\n    let ended = false;\n    if (newCharList.length < 9) {\n      ended = true;\n    }\n    setCharList([...charList, ...newCharList]);\n    setnewItemLoading(false);\n    setOffset(offset + 9);\n    setCharEnded(ended);\n  };\n\n  const itemRefs = useRef([]);\n\n  const focusOnItem = (id) => {\n    itemRefs.current.forEach((item) =>\n      item.classList.remove(\"char__item_selected\")\n    );\n    itemRefs.current[id].classList.add(\"char__item_selected\");\n    itemRefs.current[id].focus();\n  };\n\n  function renderItems(arr) {\n    const items = arr.map((item, i) => {\n      let imgStyle = { objectFit: \"cover\" };\n      if (\n        item.thumbnail ===\n        \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\n      ) {\n        imgStyle = { objectFit: \"unset\" };\n      }\n\n      return (\n        <CSSTransition key={item.id} timeout={500} classNames=\"char__item\">\n          <li\n            className=\"char__item\"\n            tabIndex={0}\n            ref={(el) => (itemRefs.current[i] = el)}\n            onClick={() => {\n              props.onCharSelected(item.id);\n              focusOnItem(i);\n            }}\n            onKeyPress={(e) => {\n              if (e.key === \" \" || e.key === \"Enter\") {\n                props.onCharSelected(item.id);\n                focusOnItem(i);\n              }\n            }}\n          >\n            <img src={item.thumbnail} alt={item.name} style={imgStyle} />\n            <div className=\"char__name\">{item.name}</div>\n          </li>\n        </CSSTransition>\n      );\n    });\n\n    return (\n      <ul className=\"char__grid\">\n        <TransitionGroup component={null}>{items}</TransitionGroup>\n      </ul>\n    );\n  }\n\n  const items = renderItems(charList);\n\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const spinner = loading && !newItemLoading ? <Spinner /> : null;\n\n  return (\n    <div className=\"char__list\">\n      {errorMessage}\n      {spinner}\n      {items}\n      <button\n        disabled={newItemLoading}\n        style={{ display: charEnded ? \"none\" : \"block\" }}\n        className=\"button button__main button__long\"\n        onClick={() => onRequest(offset)}\n      >\n        <div className=\"inner\">load more</div>\n      </button>\n    </div>\n  );\n};\n\nCharList.propTypes = {\n  onCharSelected: PropTypes.func.isRequired,\n};\n\nexport default CharList;\n","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import \"./randomChar.scss\";\nimport mjolnir from \"../../resources/img/mjolnir.png\";\nimport { useEffect, useState } from \"react\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport useMarvelService from \"../../services/MarvelService\";\nconst RandomChar = () => {\n  const [char, setChar] = useState({});\n\n  const { loading, error, getCharacter } = useMarvelService();\n\n  useEffect(() => {\n    updateChar();\n  }, []);\n\n  const updateChar = () => {\n    const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n    getCharacter(id).then(onCharLoaded);\n  };\n\n  const onCharLoaded = (char) => {\n    setChar(char);\n  };\n\n  const spinner = loading ? <Spinner /> : null;\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const content = !(loading || error) ? <View char={char} /> : null;\n\n  return (\n    <div className=\"randomchar\">\n      {spinner}\n      {errorMessage}\n      {content}\n      <div className=\"randomchar__static\">\n        <p className=\"randomchar__title\">\n          Random character for today!\n          <br />\n          Do you want to get to know him better?\n        </p>\n        <p className=\"randomchar__title\">Or choose another one</p>\n        <button className=\"button button__main\" onClick={updateChar}>\n          <div className=\"inner\">try it</div>\n        </button>\n        <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\n      </div>\n    </div>\n  );\n};\n\nconst View = ({ char }) => {\n  const { name, description, thumbnail, homepage, wiki } = char;\n  return (\n    <div className=\"randomchar__block\">\n      <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" />\n      <div className=\"randomchar__info\">\n        <p className=\"randomchar__name\">{name}</p>\n        <p className=\"randomchar__descr\">{description}</p>\n        <div className=\"randomchar__btns\">\n          <a href={homepage} className=\"button button__main\">\n            <div className=\"inner\">homepage</div>\n          </a>\n          <a href={wiki} className=\"button button__secondary\">\n            <div className=\"inner\">Wiki</div>\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RandomChar;\n","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import CharInfo from \"../charInfo/CharInfo\";\r\nimport CharList from \"../charList/CharList\";\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport decoration from \"../../resources/img/vision.png\";\r\nimport { useState } from \"react\";\r\n\r\nconst MainPage = () => {\r\n  const [newItemId, setNewItemId] = useState(null);\r\n\r\n  const onCharSelected = (id) => {\r\n    setNewItemId(id);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <RandomChar />\r\n      <div className=\"char__content\">\r\n        <CharList onCharSelected={onCharSelected} />\r\n        <CharInfo charId={newItemId} />\r\n      </div>\r\n      <img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import \"./appBanner.scss\";\nimport avengers from \"../../resources/img/Avengers.png\";\nimport avengersLogo from \"../../resources/img/Avengers_logo.png\";\n\nconst AppBanner = () => {\n  return (\n    <div className=\"app__banner\">\n      <img src={avengers} alt=\"Avengers\" />\n      <div className=\"app__banner-text\">\n        New comics every week!\n        <br />\n        Stay tuned!\n      </div>\n      <img src={avengersLogo} alt=\"Avengers logo\" />\n    </div>\n  );\n};\n\nexport default AppBanner;\n","import { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport useMarvelService from \"../../services/MarvelService\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\n\nimport \"./comicsList.scss\";\n\nconst ComicsList = () => {\n  const [comicsList, setComicsList] = useState([]);\n  const [newItemLoading, setnewItemLoading] = useState(false);\n  const [offset, setOffset] = useState(0);\n  const [comicsEnded, setComicsEnded] = useState(false);\n\n  const { loading, error, getAllComics } = useMarvelService();\n\n  useEffect(() => {\n    onRequest(offset, true);\n  }, []);\n\n  const onRequest = (offset, initial) => {\n    initial ? setnewItemLoading(false) : setnewItemLoading(true);\n    getAllComics(offset).then(onComicsListLoaded);\n  };\n\n  const onComicsListLoaded = (newComicsList) => {\n    let ended = false;\n    if (newComicsList.length < 8) {\n      ended = true;\n    }\n    setComicsList([...comicsList, ...newComicsList]);\n    setnewItemLoading(false);\n    setOffset(offset + 8);\n    setComicsEnded(ended);\n  };\n\n  function renderItems(arr) {\n    const items = arr.map((item, i) => {\n      return (\n        <li className=\"comics__item\" key={i}>\n          <Link to={`/comics/${item.id}`}>\n            <img\n              src={item.thumbnail}\n              alt={item.title}\n              className=\"comics__item-img\"\n            />\n            <div className=\"comics__item-name\">{item.title}</div>\n            <div className=\"comics__item-price\">{item.price}</div>\n          </Link>\n        </li>\n      );\n    });\n\n    return <ul className=\"comics__grid\">{items}</ul>;\n  }\n\n  const items = renderItems(comicsList);\n\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const spinner = loading && !newItemLoading ? <Spinner /> : null;\n\n  return (\n    <div className=\"comics__list\">\n      {errorMessage}\n      {spinner}\n      {items}\n      <button\n        disabled={newItemLoading}\n        style={{ display: comicsEnded ? \"none\" : \"block\" }}\n        className=\"button button__main button__long\"\n        onClick={() => onRequest(offset)}\n      >\n        <div className=\"inner\">load more</div>\n      </button>\n    </div>\n  );\n};\n\nexport default ComicsList;\n","import React from \"react\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\nimport ComicsList from \"../comicsList/ComicsListPage\";\r\n\r\nconst ComicsPage = () => {\r\n  return (\r\n    <>\r\n      <AppBanner />\r\n      <ComicsList />\r\n    </>\r\n  );\r\n};\r\nexport default ComicsPage;\r\n","import \"./singleComic.scss\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport useMarvelService from \"../../services/MarvelService\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\nimport Spinner from \"../spinner/Spinner\";\r\n\r\nconst SingleComic = (props) => {\r\n  const { comicId } = useParams();\r\n\r\n  const [comic, setComic] = useState([]);\r\n\r\n  const { error, loading, getComic } = useMarvelService();\r\n\r\n  useEffect(() => {\r\n    updateComic();\r\n  }, [comicId]);\r\n\r\n  const updateComic = () => {\r\n    getComic(comicId).then(onComicLoaded);\r\n  };\r\n\r\n  const onComicLoaded = (comic) => {\r\n    setComic(comic);\r\n  };\r\n  const spinner = loading ? <Spinner /> : null;\r\n  const errorMessage = error ? <ErrorMessage /> : null;\r\n  const content = !(loading || error) ? <View comic={comic} /> : null;\r\n  return (\r\n    <>\r\n      {spinner}\r\n      {errorMessage}\r\n      {content}\r\n    </>\r\n  );\r\n};\r\n\r\nconst View = ({ comic }) => {\r\n  const { name, description, pageCount, thumbnail, language, price } = comic;\r\n\r\n  return (\r\n    <div className=\"single-comic\">\r\n      <img src={thumbnail} alt=\"x-men\" className=\"single-comic__img\" />\r\n      <div className=\"single-comic__info\">\r\n        <h2 className=\"single-comic__name\">{name}</h2>\r\n        <p className=\"single-comic__descr\">{description}</p>\r\n        <p className=\"single-comic__descr\">{pageCount} pages</p>\r\n        <p className=\"single-comic__descr\">Language: {language}</p>\r\n        <div className=\"single-comic__price\">{price} $</div>\r\n      </div>\r\n      <Link to=\"/comics\" className=\"single-comic__back\">\r\n        Back to all\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingleComic;\r\n","import AppHeader from \"../appHeader/AppHeader\";\n\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport { MainPage, ComicsPage, SingleComicPage } from \"../pages\";\n\nconst App = () => {\n  return (\n    <div className=\"app\">\n      <Router>\n        <AppHeader />\n        <main>\n          <Route path=\"/\" exact>\n            <MainPage />\n          </Route>\n          <Route path=\"/comics/:comicId\" exact>\n            <SingleComicPage />\n          </Route>\n          <Route path=\"/comics\" exact>\n            <ComicsPage />\n          </Route>\n        </main>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport './style/style.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}